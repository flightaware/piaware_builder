#!/bin/sh
# postinst script for piaware
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

NAME=piaware
RUNAS=piaware

upgrade_piaware2_config() {
    if [ ! -f /boot/piaware-config.txt -a -d /boot ]
    then
        # write an initial piaware-config.txt so it can be updated in a moment.
        cat >/boot/piaware-config.txt <<EOF || true
# This file was created automatically during an upgrade from PiAware $2
# Additional piaware configuration settings may be added below.

EOF
    fi

    if [ -f /root/.piaware -o -f /etc/piaware ]
    then
        # upgrade legacy config files
        /usr/share/piaware/upgrade-config.tcl || echo >&2 <<EOF
Automatic config file upgrade failed. You may need to manually reconfigure
piaware using piaware-config or by editing /etc/piaware.conf or
/boot/piaware-config.txt. Your old config files are preserved as
/root/.piaware.old and /etc/piaware.old
EOF

        [ -f /root/.piaware ] && mv /root/.piaware /root/.piaware.old
        [ -f /etc/piaware ] && mv /etc/piaware /etc/piaware.old
    fi
}

update_mlat_config() {
    old_mlat_config=$(piaware-config -show mlat-results-format)
    new_mlat_config=""

    for part in $old_mlat_config
    do
        case "$part" in
            *adsbexchange*|*167.114.60.74*)
                # drop this
                echo "Removed '$part' from mlat results config" >&2
                ;;
            *)
                # keep this
                if [ -z "$new_mlat_config" ]
                then
                    new_mlat_config="$part"
                else
                    new_mlat_config="$new_mlat_config $part"
                fi
                ;;
        esac
    done

    if [ "$old_mlat_config" != "$new_mlat_config" ]
    then
        echo "Updating mlat results config to: $new_mlat_config" >&2
        piaware-config mlat-results-format "$new_mlat_config"
    fi
}

case "$1" in
    configure)
        if ! getent passwd "$RUNAS" >/dev/null
        then
            useradd --system --home-dir /usr/share/$NAME --user-group "$RUNAS"
        fi

        if [ ! -d /var/cache/piaware ]
        then
            mkdir -p /var/cache/piaware
            chown $RUNAS:root /var/cache/piaware
            chmod 0755 /var/cache/piaware
        fi

        # fix piaware.conf ownership if present
        if [ -f /etc/piaware.conf ]
        then
            chown root:$RUNAS /etc/piaware.conf
            chmod 0640 /etc/piaware.conf  # this can contain passwords
        fi

        if test -n "$2" && dpkg --compare-versions "$2" lt "3.0"
        then
            # it's an upgrade from 2.x
            # convert the old-format config files
            upgrade_piaware2_config

            # put something in /tmp/piaware.out to alert the user
            if [ -e /tmp/piaware.out ]
            then
                cat <<EOF >>/tmp/piaware.out
===============================================================

 PiAware 3 writes logging information to /var/log/piaware.log
 Please see that file for future PiAware logging.

===============================================================
EOF
            fi
        fi

        if test -n "$2" && dpkg --compare-versions "$2" lt "3.5.1"
        then
            # it's an upgrade from pre-3.5.1
            # strip out mlat-forwarding configurations
            update_mlat_config
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
